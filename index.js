var aemsync = require("aemsync");
var fs = require("fs");

var initAemSyncWatcher = function(options) {
  var targets = options.targets || "http://admin:admin@localhost:4502";
  var interval = options.interval || 300;
  var exclude = options.exclude || "";
  var workingDir = options.workingDir || "./";

  var pipeline = new aemsync.Pipeline(options);
  var watcher = new aemsync.Watcher();

  pipeline.start();

  options.callback = localPath => {
    pipeline.enqueue(localPath);
  };

  watcher.watch(options);
};

var writeToText = function(files) {
  var distFolder = "dist";

  var jsContent = base + "\n";
  //var cssContent = base + "\n";

  files.map(function(filename) {
    jsContent += filename + "\n";
  });

  //TODO: Look into CSS support with CSS Extract Plugin
  /*cssFiles.map(function(filename) {
    cssContent += filename + "\n";
  });*/

  var createFile = function(filename, content) {
    fs.writeFile(filename, content, err => {
      if (err) throw err;
      console.log("Clientlibs file " + filename + " was created and populated");
    });
  };

  clientlibFiles.map(function(clientlibFile) {
    if (clientlibFile.includes("js")) {
      createFile(clientlibFile, jsContent);
    }
    /*else if (clientlibFile.includes("css")) {
      createFile(clientlibFile, cssContent);
    }*/
  });
};

//https://github.com/webpack/docs/wiki/how-to-write-a-plugin
//https://medium.com/@the1mills/how-to-test-your-npm-module-without-publishing-it-every-5-minutes-1c4cb4b369be
function AemSyncPlugin(options) {}

AemSyncPlugin.prototype.apply = function(compiler) {
  var fileList = [];
  compiler.plugin("emit", function(compilation, callback) {
    // Explore each chunk (build output):
    compilation.chunks.forEach(function(chunk) {
      chunk.files.forEach(function(filename) {
        // Get the asset filename for each file generated by the chunk:
        fileList.push(filename);
      });
    });

    var jsContent = "";
    fileList.forEach(function(filename) {
      jsContent += filename + "\n";
    });

    //TODO: Look into CSS support with CSS Extract Plugin
    var cssContent = "";
    /*fileList.map(function(filename) {
      cssContent += filename + "\n";
    });*/

    // Wrtie file names to js.txt
    var clientlibFiles = ["css.txt", "js.txt"];
    clientlibFiles.map(function(clientlibFile) {
      compilation.assets[clientlibFile] = {
        source: function() {
          return clientlibFile.includes("js") ? jsContent : cssContent;
        },
        size: function() {
          return fileList.length;
        }
      };
    });

    callback();
  });

  if (process.argv.indexOf("--watch") != -1) {
    initAemSyncWatcher(this.options);
  }
};

module.exports = AemSyncPlugin;
